# Generated by Django 4.2.6 on 2025-04-06 12:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0004_alter_collection_created_at'),
    ]

    operations = [
        migrations.CreateModel(
            name='PlaybackStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress', models.IntegerField()),
                ('duration', models.IntegerField()),
                ('last_played_at', models.DateTimeField()),
            ],
            options={
                'verbose_name': '播放记录',
                'verbose_name_plural': '播放记录',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50)),
                ('content', models.TextField()),
                ('options', models.JSONField()),
                ('score', models.IntegerField()),
            ],
            options={
                'verbose_name': '题目',
                'verbose_name_plural': '题目',
            },
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField()),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '成绩',
                'verbose_name_plural': '成绩',
            },
        ),
        migrations.RemoveField(
            model_name='category',
            name='locked',
        ),
        migrations.RemoveField(
            model_name='homework',
            name='status',
        ),
        migrations.RemoveField(
            model_name='material',
            name='type',
        ),
        migrations.RemoveField(
            model_name='user',
            name='role',
        ),
        migrations.RemoveField(
            model_name='user',
            name='unlocked_collections',
        ),
        migrations.AlterField(
            model_name='video',
            name='duration',
            field=models.CharField(default='00:00', max_length=10, verbose_name='时长'),
        ),
        migrations.DeleteModel(
            name='Playback',
        ),
        migrations.AddField(
            model_name='score',
            name='homework',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='core.homework'),
        ),
        migrations.AddField(
            model_name='score',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='question',
            name='homework',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='core.homework'),
        ),
        migrations.AddField(
            model_name='playbackstat',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playback_stats', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='playbackstat',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playback_stats', to='core.video'),
        ),
        migrations.AddField(
            model_name='homework',
            name='related_questions',
            field=models.ManyToManyField(blank=True, related_name='related_homeworks', to='core.question'),
        ),
        migrations.AlterUniqueTogether(
            name='playbackstat',
            unique_together={('user', 'video')},
        ),
    ]
