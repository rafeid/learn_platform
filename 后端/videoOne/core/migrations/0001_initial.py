# Generated by Django 4.2.6 on 2025-03-28 07:51

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', '管理员'), ('user', '普通用户')], default='user', max_length=10, verbose_name='角色')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='分类名称')),
                ('locked', models.BooleanField(default=True, verbose_name='是否锁定')),
                ('progress', models.PositiveSmallIntegerField(default=0, verbose_name='进度')),
            ],
            options={
                'verbose_name': '分类',
                'verbose_name_plural': '分类',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='标题')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
                ('thumbnail', models.CharField(blank=True, max_length=200, verbose_name='缩略图')),
                ('url', models.CharField(max_length=200, verbose_name='视频地址')),
                ('duration', models.CharField(max_length=10, verbose_name='时长')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='core.category')),
            ],
            options={
                'verbose_name': '视频',
                'verbose_name_plural': '视频',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='标题')),
                ('type', models.CharField(choices=[('doc', '文档'), ('video', '视频')], max_length=10, verbose_name='类型')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
                ('url', models.CharField(max_length=200, verbose_name='资料地址')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='日期')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materials', to='core.category')),
            ],
            options={
                'verbose_name': '学习资料',
                'verbose_name_plural': '学习资料',
            },
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='标题')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
                ('deadline', models.DateTimeField(verbose_name='截止时间')),
                ('status', models.CharField(choices=[('pending', '未完成'), ('completed', '已完成')], default='pending', max_length=10, verbose_name='状态')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='homeworks', to='core.category')),
            ],
            options={
                'verbose_name': '作业',
                'verbose_name_plural': '作业',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='合辑名称')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
                ('thumbnail', models.CharField(blank=True, max_length=200, verbose_name='封面图')),
                ('created_at', models.BigIntegerField(verbose_name='创建时间')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
            ],
            options={
                'verbose_name': '合辑',
                'verbose_name_plural': '合辑',
            },
        ),
        migrations.AddField(
            model_name='category',
            name='collection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='core.collection'),
        ),
        migrations.AddField(
            model_name='user',
            name='favorite_collections',
            field=models.ManyToManyField(blank=True, related_name='favorited_by', to='core.collection'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='unlocked_collections',
            field=models.ManyToManyField(related_name='unlocked_users', to='core.collection'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='Playback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress', models.PositiveIntegerField(verbose_name='播放进度(秒)')),
                ('duration', models.PositiveIntegerField(verbose_name='总时长(秒)')),
                ('last_played', models.DateTimeField(auto_now=True, verbose_name='最后播放时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.video')),
            ],
            options={
                'verbose_name': '播放记录',
                'verbose_name_plural': '播放记录',
                'unique_together': {('user', 'video')},
            },
        ),
    ]
